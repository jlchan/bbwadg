function [H,D,tL,tR,x]=CSBPpEQ3(N)
%==========================================================================
% Purpose: This function computes the classical FD SBP operator for p = 3
%          of degree = 3 for the first derivative with N nodes on
%          the domain [-1,1]
% Inputs:
%          N = number of nodes, the minimum is 10
%	   construction of the operators
%
% Outputs:
%           H = SBP norm
%           D = first derivative operator
%           tL = projection operator for the left boundary
%           tR = projection operator for the right boundary
%           x = nodal distribution for the operator
%
% Author: David C. Del Rey Fernandez January 2016
%
%==========================================================================

x = transpose(linspace(-1,1,N));
dx = 2/(N-1);

%==== norm matrix
H = dx*eye(N,N);
H(1:6,1:6)=dx*[0.13649e5 / 0.43200e5 0 0 0 0 0; 0 0.12013e5 / 0.8640e4 0 0 0 0; 0 0 0.2711e4 / 0.4320e4 0 0 0; 0 0 0 0.5359e4 / 0.4320e4 0 0; 0 0 0 0 0.7877e4 / 0.8640e4 0; 0 0 0 0 0 0.43801e5 / 0.43200e5;];
% lower poriton
for i=1:6
    for j=1:6
        H(N-(i-1),N-(j-1))=H(i,j);
    end
end
%==== first derivative
D = zeros(N,N);
D(1:6,1:9) = ...
1/dx*[-0.21600e5 / 0.13649e5 0.5124475092222703052468879e25 / 0.2505990045200315292896040e25 -0.58752909548430618941812e23 / 0.313248755650039411612005e24 -0.159267246833799759813661e24 / 0.417665007533385882149340e24 0.18306575045382041159483e23 / 0.313248755650039411612005e24 0.120512309461734500607719e24 / 0.2505990045200315292896040e25 0 0 0; -0.426577465431008328683e21 / 0.918012325152141289800e21 0 0.28772124531747103103e20 / 0.91801232515214128980e20 0.4739194508129391986e19 / 0.22950308128803532245e20 -0.1828286306657606557e19 / 0.61200821676809419320e20 -0.2910908201471785429e19 / 0.114751540644017661225e21 0 0 0; 0.10836021679902364246e20 / 0.114751540644017661225e21 -0.127495216525222408549e21 / 0.183602465030428257960e21 0 0.66294394848412989229e20 / 0.91801232515214128980e20 -0.3185918970301186831e19 / 0.22950308128803532245e20 0.5093573171603569909e19 / 0.306004108384047096600e21 0 0 0; 0.159267246833799759813661e24 / 0.1639876016830108390679400e25 -0.28465971813079192963909e23 / 0.122990701262258129300955e24 -0.179724104434047613799819e24 / 0.491962805049032517203820e24 0 0.540747751505546378368499e24 / 0.983925610098065034407640e24 -0.38969683572055185949316e23 / 0.614953506311290646504775e24 0.72e2 / 0.5359e4 0 0; -0.18306575045382041159483e23 / 0.903897885652927117469325e24 0.21963203401877827569241e23 / 0.482078872348227795983640e24 0.17274052656973034997682e23 / 0.180779577130585423493865e24 -0.540747751505546378368499e24 / 0.723118308522341693975460e24 0 0.5591070156686698065364559e25 / 0.7231183085223416939754600e25 -0.1296e4 / 0.7877e4 0.144e3 / 0.7877e4 0; -0.120512309461734500607719e24 / 0.8041971570797788126905960e25 0.34968740224280558358577e23 / 0.1005246446349723515863245e25 -0.13808676868217278023299e23 / 0.1340328595132964687817660e25 0.77939367144110371898632e23 / 0.1005246446349723515863245e25 -0.5591070156686698065364559e25 / 0.8041971570797788126905960e25 0 0.32400e5 / 0.43801e5 -0.6480e4 / 0.43801e5 0.720e3 / 0.43801e5;];

% interior of D1
for i=7:N-6
    D(i,i-3:i+3)=1/dx*[-1/60,3/20,-3/4,0,3/4,-3/20,1/60];
end
% the lower portion of D1
for i=1:9
    for j=1:9
        D(N-(i-1),N-(j-1))=-D(i,j);
    end
end
%===== matrices necessary for the SATs
tL = zeros(N,1);
tL(1,1)=1;
tR = zeros(N,1);
tR(N,1)=1;